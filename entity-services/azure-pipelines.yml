# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java
variables:
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

steps:

- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | **/pom.xml'
    restoreKeys: |
       maven | "$(Agent.OS)"
       maven
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo

- task: DownloadSecureFile@1
  name: otn_maven_security_settings_xml
  displayName: 'Download OTN Maven security-settings.xml'
  inputs:
    secureFile: 'otn_maven_settings-security.xml'

- task: DownloadSecureFile@1
  name: otn_maven_settings_xml
  displayName: 'Download OTN Maven settings.xml'
  inputs:
    secureFile: 'otn_maven_settings.xml'

- script: |
    mkdir -p ${HOME}/.m2/
    echo Copying $(otn_maven_security_settings_xml.secureFilePath) to ${HOME}/.m2/settings-security.xml
    cp -n $(otn_maven_security_settings_xml.secureFilePath) ${HOME}/.m2/settings-security.xml
    echo Copying $(otn_maven_settings_xml.secureFilePath) to ${HOME}/.m2/settings.xml
    cp -n $(otn_maven_settings_xml.secureFilePath) ${HOME}/.m2/settings.xml
    echo Done! ${HOME}/.m2 contents:
    ls -1 ${HOME}/.m2/
  displayName: Copy OTN Maven settings

- script: |
    mkdir -p $(MAVEN_CACHE_FOLDER)
  displayName: Maven cache directory creation 

- task: Cache@2
  inputs:
    key: 'maven | "$(Agent.OS)" | $(Build.SourcesDirectory)/EntityRestService/pom.xml'
    restoreKeys: |
       maven | "$(Agent.OS)"
       maven
    path: $(MAVEN_CACHE_FOLDER)
  displayName: Cache Maven local repo

- task: Maven@3
  inputs:
    mavenPomFile: 'EntityRestService/pom.xml'
    mavenOptions: $(MAVEN_OPTS)
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: false
    goals: 'dependency:resolve'
  displayName: Maven dependencies install

- task: Maven@3
  inputs:
    mavenPomFile: 'EntityRestService/pom.xml'
    mavenOptions: $(MAVEN_OPTS)
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    codeCoverageToolOption: 'jaCoCo'
    goals: 'package'
  displayName: Maven package build

- script: |
   git checkout -- EntityRestService/pom.xml
  displayName: revert changes to pom.xml made by Azure Pipeline
